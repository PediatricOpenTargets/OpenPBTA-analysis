name: Run Analysis

# Controls when the action will run.
on:
  workflow_dispatch:
  pull_request:

jobs:
  build_and_run:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        name: Checkout repo

      - name: Build container and download data
        uses: ./
        id: download-data
        with:
          args: OPENPBTA_URL=https://s3.amazonaws.com/d3b-openaccess-us-east-1-prd-pbta/data OPENPBTA_RELEASE=testing bash download-data.sh

      - name: Run 01-create-interaction-plots in container
        uses: ./
        id: create-interaction-plots
        with:
          args: OPENPBTA_ALL=0 bash analyses/interaction-plots/01-create-interaction-plots.sh

      - uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### 01-create-interaction-plots \`${{ steps.create-interaction-plots.outcome }}\`

            <details><summary>create-interaction-plots</summary>

            \`\`\`${{ steps.create-interaction-plots.outputs.stdout }}\`\`\`

            </details>;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Run RUN-telomerase-activity-prediction in container
        uses: ./
        id: RUN-telomerase-activity-prediction
        with:
          args: bash analyses/telomerase-activity-prediction/RUN-telomerase-activity-prediction.sh

      - uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### RUN-telomerase-activity-prediction \`${{ steps.RUN-telomerase-activity-prediction.outcome }}\`

            <details><summary>RUN-telomerase-activity-prediction</summary>

            \`\`\`${{ steps.RUN-telomerase-activity-prediction.outputs.stdout }}\`\`\`

            </details>;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
