#!/bin/bash
# Sangeeta Shukla

# Purpose: Automate search for EFO, MONDO, NCIT codes for cancer_group found in current release version of histologies.txt
# Note: Relevant cancer_group list extracted from efo-mondo-map-prefill.tsv
# This file is generated by molecular-subtype-integrate module in OpenPenCan repo

# Set this so the whole loop stops if there is an error
set -e
set -o pipefail

# This script should always run as if it were being called from
# the directory it lives in.
script_directory="$(perl -e 'use File::Basename;
 use Cwd "abs_path";
 print dirname(abs_path(@ARGV[0]));' -- "$0")"
cd "$script_directory" || exit

# Set up paths to data files consumed by analysis
#data_dir="../../data"
source_dir="./results"

# Set up paths to to write result files 
results_dir="./results"

# Input data file path 
input_prefill_file="${source_dir}/efo-mondo-map-prefill.tsv"


ols_efo="EFO"
ols_mondo="MONDO"
ols_ncit="NCIT"
#ols_uberon="UBERON"
#ols_hp="HP"

# Result file name
result_parsed_prefix="map-prefill"
result_parsed_suffix="codes.tsv"



python3 00-search-ols-ontology-terms.py \
  $input_prefill_file \
  $ols_efo \
  "${result_parsed_prefix}-${ols_efo}-${result_parsed_suffix}"


python3 00-search-ols-ontology-terms.py \
  $input_prefill_file \
  $ols_mondo \
  "${result_parsed_prefix}-${ols_mondo}-${result_parsed_suffix}"


python3 00-search-ols-ontology-terms.py \
  $input_prefill_file \
  $ols_ncit \
  "${result_parsed_prefix}-${ols_ncit}-${result_parsed_suffix}"


#python3 00-search-ols-ontology-terms.py \
#  $input_prefill_file \
#  $ols_uberon \
#  "${result_parsed_prefix}-${ols_uberon}-${result_parsed_suffix}"


#python3 00-search-ols-ontology-terms.py \
#  $input_prefill_file \
#  $ols_hp \
#  "${result_parsed_prefix}-${ols_hp}-${result_parsed_suffix}"


